# Задача 1. Напишите программу, которая принимает на вход вещественное число
# и показывает сумму его цифр.
# Пример:
# - 6782 -> 23
# - 0,56 -> 11

# a = input('Введите вещественное число: ')
# if float(a) < 0:
#     a = float(a) * (-1)

# def summa(a):
#     sum = 0
#     for i in str(a):
#         if i != '.':
#             sum += int(i)
#     return sum

# print(f'Сумма всех чисел равна: {summa(a)}')

# Задача 2. Напишите программу, которая принимает на вход число N 
# и выдает набор произведений чисел от 1 до N.
# Пример:
# - пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)

# n = int(input('Введите число N: '))
# prodNumb = 1
# print(f'Список произведений чисел от 1 до {n} равен: ')
# for i in range(n - 1):
#     i = i + 1
#     prodNumb = prodNumb * i
#     print(prodNumb, end= ', ')
# i = i + 1
# print(prodNumb * i, end= ' ')

# Задача 3. Задайте список из n чисел последовательности (1+1/n)^n и выведите на экран их сумму.
# Пример:
# - Для n = 6: [2.0, 2.25, 2.37037037037037, 2.44140625, 2.4883199999999994, 2.5216263717421135]

# n = int(input('Введите число N: ')) 

# def progression(n):
#     return[round((1 + 1 / x)**x, 16) for x in range (1, n + 1)]   
        
# print(f'Задана последовательность: {progression(n)}')
# print(f'Сумма чисел последовательности равна: {round(sum(progression(n)))}')

# Задача 4. Задайте список из N элементов, заполненных числами из промежутка [-N, N]. 
# Найдите произведение элементов на указанных позициях. 
# Позиции хранятся в файле file.txt в одной строке одно число.
# (для продвинутых - с файлом, вариант минимум - ввести позиции в консоли)
# -2 -1 0 1 2
# Позиции: 0,1 -> 2

with open('file.txt','r') as f:
    a = f.read().split('\n')
print(a)